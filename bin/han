#!/bin/bash

set -e
. ~/bin/lib/util.sh

cleanup() {
  [[ -z $tmp ]] || rm -f "$tmp";
  [[ -z $errtmp ]] || rm -f "$errtmp";
}
trap cleanup EXIT

tmp="$(mktemp --tmpdir han_XXXX.htm)"
errtmp="$(mktemp --tmpdir han_stderr_XXXX.log)"

cat <<EOF > "$tmp"
<style type="text/css">
body
{
    padding: 2em;
    background-color: #222;
    color: #EEE;
}

a {
    color: #E44;
    text-decoration:none;
}

a:hover { color: #E77; }

hr
{
    padding-top: 1em;
    border: 0;
    border-bottom: 2px solid #333;
}

h1
{
    margin-top: 0;
    font-size: 300%;
}
</style>
EOF

# Eat stderr because it spews a bunch of troff HTML debugging output for some
# reason, but display it if it actually fails.
showcmd man -Thtml "$@"
if ! man -Thtml "$@" 2> "$errtmp" >> "$tmp"; then
  die "$(cat "$errtmp")"
fi
cmd xdg-open "$tmp"

# xdg-open seems to do the right thing and wait for the browser... or maybe it's
# just slow? A more-proper script would spin up a small python http that dies
# after the first request.
( ( sleep 5 && rm -f "$tmp" ) & )
# If that worked don't trigger exit cleanup
unset tmp
