#!/bin/bash

set -e
# Sync an hg repo to its git mirror

repo="$(basename "$1")"
repo="${repo#mozilla-}"

echo ":: Updating $repo"
cd "$MOZPATH"
if [ ! -d "mozilla-$repo/.hg" ]; then
  echo >&2 "mozilla-$repo" does not appear to be a hg repository
  exit 1
fi

cd "mozilla-$repo"
if [ ! -e .hg/git ] || [ ! -e .hg/git-mapfile ] || [ ! -e .hg/git-branch ]; then
    echo >&2 "This repo lacks the necessary .hg/git* files for syncing"
    exit 1
fi

oldrev="$(hg log -r tip --template={rev})"
hg pull
newrev="$(hg log -r tip --template={rev})"
newgit="$(h2g $newrev 2>/dev/null || true)"

branch="$(cat .hg/git-branch)"

if [ "$newrev" != "$oldrev" ]; then
    hg up -C
    rm -f .hg/bookmarks
    hg bookmark -v -r tip "$branch"
fi

if [ -z "$newgit" ]; then
    echo ":: Git is not up to date, exporting"
    hg gexport -v
    cd "$MOZPATH/hg-git-map"
    git commit -a -m "Locally imported revisions" || true
elif [ "$(cat "$MOZPATH/moz-git/.git/HEAD")" = "ref: refs/heads/$repo" ]; then
    echo >&2 '!!'" $repo is currently checked out in the master git repo, not updating ref"
else
    echo ":: Updating $repo ref ($branch) to $newgit"
    target="$MOZPATH/moz-git/.git/refs/heads/$branch"
    mkdir -pv "$(dirname "$target")"
    echo "$newgit" > "$target"
fi
