#!/bin/bash

set -euo pipefail

# Electron apps fucking hang if the browser they invoke outputs anything on either pipe JFC
exec &>/dev/null

source "$(dirname -- "$0")"/lib/util.sh

# Prepend script's directory to the path
export PATH="$(readlink -f -- "$(dirname -- "$0")")${PATH:+:$PATH}"

parse_args nightfox 'grp' 'no-omtc,slowscript' "$@"
eval app_args=("$(get_args)")

[ -n "$(get_option no-omtc)" ] || export MOZ_USE_OMTC=1
[ -n "$(get_option slowscript)" ] || export JS_DISABLE_SLOW_SCRIPT_SIGNALS=1

# export MOZ_PROFILER_NEW=1
# export MOZ_PROFILER_VERBOSE=1
# export MOZ_PROFILER_INTERVAL=10
# export MOZ_PROFILER_MODE=combined
# export MOZ_PROFILER_STACK_SCAN=0
export MOZ_USE_XINPUT2=0
#export GDK_DPI_SCALE=1.7
# Destroy FFX
export __GL_THREADED_OPTIMIZATIONS=0
export GDK_BACKEND=wayland
export MOZ_ENABLE_WAYLAND=1
# Breaks all font rendering if you don't have the right xdg-desktop-portal-{gnome,gtk}
export GTK_USE_PORTAL=1

plugin_container="$(get_option p)"

cmd cd ~/firefox-nightly

if [ -n "$(get_option g)" ]; then
  if [[ -n $plugin_container ]]; then
    pids=($(cmd pgrep -f plugin-container || true))
  else
    pids=($(cmd pgrep firefox || true))
  fi
  if [[ -n $pids ]]; then
    estat "Existing instances"
    ps $pids
  else
    estat "No existing instances found"
  fi

  if [[ -n $plugin_container ]]; then
    if [[ $(get_option r) ]]; then
      [[ ${#pids[@]} -eq 1 ]] || die "-r can only auto-run if one plugin-container is found, but found ${#pids[@]}: ${pids[*]}"
      plugin_run=(-ex "attach ${pids[0]}" -ex continue)
    fi
    [[ $(num_args) -eq 0 ]] || die "Can't pass args with -p"
    cmd gdb ./plugin-container "${plugin_run[@]}"
  else
    [[ -z $(get_option r) ]] || run="-ex run"
    cmd cleangtk gdb $run --args ./firefox "${app_args[@]}"
  fi
else
  [[ -z $plugin_container ]] || die "-p doesn't make sense without -g"
  [[ -z $(get_option r) ]] || die "-r doesn't make sense without -g"
  cmd cleangtk ~/firefox-nightly/firefox "${app_args[@]}"
fi
