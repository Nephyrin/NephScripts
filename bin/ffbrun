#!/bin/bash

# Run given firefox on profile "<dirname firefox>/profile"
# Used for build dirs

set -e

. "$(dirname "$0")"/lib/util.sh
. "$(dirname "$0")"/lib/moz.sh

neph="$(dirname "$(readlink -f "$0")")/.."

parse_args ffbrun 'gd:a:rx' 'moz:' "$@"

# Default FF args
ffargs=(./firefox -no-remote -profile ./profile "$(get_args)")

# Default moz env vars
[ ! -z "$XPCOM_MEM_LEAK_LOG" ] || export XPCOM_MEM_LEAK_LOG=1
[ ! -z "$NSPR_LOG_MODULES" ] || export NSPR_LOG_MODULES="objlc:5,Plugin:5,PluginNPP:5,PluginNPN:5"
# see also IPCPlugins:5 (VERY spammy)

# Set debugger from args
dbgargs=($(get_option a))
debugger="$(get_option d)"
[ -z "$debugger$(get_option g)" ] || dbg=1
[ ! -z "$debugger" ] || debugger="gdb"
[ -z "$(get_option r)" ] || dbgargs=("${dbgargs[@]}" -ex run)

# Don't cause non-gdb spew if running gdb in emacs
if [ "$EMACS" = "t" ] && [ -n "$dbg" ]; then
  cmd() { "$@"; }
fi

# pass --moz foo to moz setup script
moz="$(get_option moz)"
[ -z "$moz" ] || cmd moz $moz

# Sanity checks
[ ! -z "$MOZOBJ" ] || die "No moz config"
if [ ! -x "$MOZPATH/$MOZOBJ/dist/bin/firefox" ]; then
  die "Not built :("
fi

cd "$MOZPATH/$MOZOBJ/dist/bin/"

# Nuke profile with -x
[ -z "$(get_option x)" ] || rm -rf profile

# Make profile if necessary
if [[ ! -d "profile" ]]; then
  echo ":: Making fresh profile"
  cmd mkdir -p profile/plugins
fi

# Copy plugins into profile
if [[ -d ../plugins ]]; then
    cmd cp ../plugins/*.so profile/plugins
fi

if [ -n "$dbg" ] && [ "$EMACS" = "t" ]; then
  # Don't use run-mozilla.sh as it'll include unwanted spew.
  cleangtk $debugger -i=mi "${dbgargs[@]}" --args "${ffargs[@]}"
else
  [ -z "$dbg" ] || dbgarg="-g"
  [ ${#dbgargs[@]} -eq 0 ] || dbgargs=(-a "$(sh_quote "${dbgargs[@]}")")
  cmd cleangtk ./run-mozilla.sh $dbgarg -d "$debugger" \
                                        "${dbgargs[@]}" \
                                        "${ffargs[@]}"
fi
